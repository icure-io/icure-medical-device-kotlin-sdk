/**
 * ICure Medical Device Micro Service
 *
 * ICure Medical Device Micro Service
 *
 * The version of the OpenAPI document: v2
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.md.client.apis

import io.icure.kraken.client.infrastructure.ClientException
import io.icure.kraken.client.infrastructure.ServerException
import io.icure.md.client.models.DataSample
import io.icure.md.client.models.Document
import io.icure.md.client.models.Filter
import io.icure.md.client.models.PaginatedListDataSample
import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.flow.Flow
import java.nio.ByteBuffer
import javax.inject.Named

@Named
@ExperimentalStdlibApi
@ExperimentalCoroutinesApi
interface DataSampleApi {

    /**
    * Create a DataSample
    *
    * @param dataSample
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSampleFor(patientId: String, dataSample: DataSample) : DataSample

    /**
    * Create a batch of Data samples
    *
    * @param dataSample
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSamplesFor(patientId: String, dataSamples: List<DataSample>) : List<DataSample>

    /**
    * Delete a Data sample attachment
    *
    * @param id
    * @param documentId
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteAttachment(id: kotlin.String, documentId: kotlin.String) : kotlin.String

    /**
    * Delete a DataSample
    *
    * @param id
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSample(id: kotlin.String) : kotlin.String

    /**
    * Delete a batch of Data samples
    *
    * @param ids
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSamples(ids: kotlin.collections.List<kotlin.String>) : kotlin.collections.List<kotlin.String>

    /**
    * Find Data samples using a filter
    *
    * @param filter
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun filterDataSample(filter: Filter) : PaginatedListDataSample

    /**
    * Get a DataSample
    *
    * @param id
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSample(id: kotlin.String) : DataSample

    /**
    * Get a DataSample attachment metadata
    *
    * @param id
    * @param documentId
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachment(id: kotlin.String, documentId: kotlin.String) : Document

    /**
    * Get a Data sample attachment metadata
    *
    * @param id
    * @param documentId
    * @param attachmentId
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachmentContent(id: kotlin.String, documentId: kotlin.String, attachmentId: kotlin.String) : kotlin.collections.List<kotlin.Any>

    /**
    * Find Data samples using a filter
    *
    * @param filter
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun matchDataSample(filter: Filter) : kotlin.collections.List<kotlin.String>

    /**
    * Create a DataSample
    *
    * @param id
    * @param documentId
    * @param body
    * @return OK
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun setDataSampleAttachment(id: kotlin.String, documentId: kotlin.String, body: kotlinx.coroutines.flow.Flow<java.nio.ByteBuffer>) : Document

}
