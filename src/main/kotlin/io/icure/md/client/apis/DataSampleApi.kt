/**
 * ICure Medical Device Micro Service
 *
 * ICure Medical Device Micro Service
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.md.client.apis

import io.icure.md.client.models.DataSample
import io.icure.md.client.models.Document
import io.icure.md.client.models.Filter
import io.icure.md.client.models.PaginatedListDataSample

import kotlinx.coroutines.ExperimentalCoroutinesApi
 
import io.icure.kraken.client.infrastructure.ClientException
import io.icure.kraken.client.infrastructure.ServerException
import kotlinx.coroutines.flow.Flow
import java.nio.ByteBuffer

import javax.inject.Named

@Named
@ExperimentalStdlibApi
@ExperimentalCoroutinesApi
interface DataSampleApi {

    /**
    * Create a DataSample
    * 
    * @param dataSample  
    * @return DataSample
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSample(dataSample: DataSample) : DataSample 

    /**
    * Create a batch of Data samples
    * 
    * @param dataSample  
    * @return kotlin.collections.List<DataSample>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSamples(dataSample: List<DataSample>) : List<DataSample>

    /**
    * Delete a Data sample attachment
    * 
    * @param dataSampleId
    * @param documentId  
    * @return kotlin.String
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteAttachment(dataSampleId: String, documentId: String) : String

    /**
    * Delete a DataSample
    * 
    * @param dataSampleId
    * @return kotlin.String
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSample(dataSampleId: String) : String

    /**
    * Delete a batch of Data samples
    * 
    * @param dataSampleIds
    * @return kotlin.collections.List<kotlin.String>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSamples(dataSampleIds: List<String>) : List<String>

    /**
    * Find Data samples using a filter
    * 
    * @param filter  
    * @return PaginatedListDataSample
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun filterDataSample(filter: Filter) : PaginatedListDataSample 

    /**
    * Get a DataSample
    * 
    * @param dataSampleId
    * @return DataSample
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSample(dataSampleId: String) : DataSample

    /**
    * Get a DataSample attachment metadata
    * 
    * @param dataSampleId
    * @param documentId  
    * @return Document
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachment(dataSampleId: String, documentId: String) : Document

    /**
    * Get a Data sample attachment metadata
    * 
    * @param dataSampleId
    * @param documentId  
    * @param attachmentId  
    * @return kotlin.collections.List<kotlin.Any>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachmentContent(dataSampleId: String, documentId: String, attachmentId: String) : List<Any>

    /**
    * Find Data samples using a filter
    * 
    * @param filter  
    * @return kotlin.collections.List<kotlin.String>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun matchDataSample(filter: Filter) : List<String>

    /**
    * Create a DataSample
    * 
    * @param dataSampleId
    * @param documentId  
    * @param attachment
    * @return Document
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun setDataSampleAttachment(dataSampleId: String, documentId: String, attachment: Flow<ByteBuffer>) : Document

}
