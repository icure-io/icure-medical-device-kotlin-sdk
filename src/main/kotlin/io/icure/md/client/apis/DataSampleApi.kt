/**
 * ICure Medical Device Micro Service
 *
 * ICure Medical Device Micro Service
 *
 * The version of the OpenAPI document: v2
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.md.client.apis

import io.icure.kraken.client.infrastructure.ClientException
import io.icure.kraken.client.infrastructure.ServerException
import io.icure.md.client.filter.Filter
import io.icure.md.client.models.DataSample
import io.icure.md.client.models.Document
import io.icure.md.client.models.PaginatedListDataSample
import kotlinx.coroutines.ExperimentalCoroutinesApi
import java.util.*
import javax.inject.Named

@Named
@ExperimentalStdlibApi
@ExperimentalCoroutinesApi
interface DataSampleApi {

    /**
     * Create or update a [DataSample] for a patient
     * When modifying a data sample, you can&#39;t update the patient of it : For this, you need to delete the faulty data sample and create a new one. When modifying the data sample, you also need to keep the same batchId : It is not possible to change the batch of a data sample.
     * @param patientId
     * @param dataSample
     * @return Returns the created or modified data sample as a [DataSample] object, with updated information.
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException May happen in one of the following cases :                      - You provided a patientId that does not correspond to any existing [Patient];                     - You provided a batchId that does not correspond to any existing batch;                      - You provided a batchId that does not correspond to the batch of the updated data sample;
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSampleFor(patientId: kotlin.String, dataSample: DataSample): DataSample

    /**
     * Create or update a batch of [DataSample] for a patient
     * All the provided data samples will be created in the same batch. If you are trying to update some data samples, then those ones need to come from the same batch.                  When modifying a data sample, you can&#39;t update the patient of it : For this, you need to delete the faulty data sample and create a new one. When modifying the data sample, you also need to keep the same batchId : It is not possible to change the batch of a data sample.
     * @param patientId
     * @param dataSample
     * @return Returns the created or modified data sample as a [DataSample] object, with updated information.
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException May happen in one of the following cases :                      - You provided a patientId that does not correspond to any existing [Patient];                     - You provided a batchId that does not correspond to any existing batch;                      - You provided a batchId that does not correspond to the batch of the updated data sample;                     - You provided data samples coming from different batches : If you want to add new data samples in an existing batch, do not forget to refer the batch id for the new ones as well;                     - You tried to create / update more than 1000 data samples (including the ones contained in compound values) : iCure can&#39;t process more than 1000 data samples by batch;
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun createOrModifyDataSamplesFor(
        patientId: kotlin.String,
        dataSample: kotlin.collections.List<DataSample>
    ): kotlin.collections.List<DataSample>

    /**
     * Delete an attachment of a DataSample
     * Deletes an attachment, using its corresponding documentId
     * @param dataSampleId
     * @param documentId
     * @return Returns the id of the deleted attachment
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteAttachment(dataSampleId: kotlin.String, documentId: kotlin.String): kotlin.String

    /**
     * Delete a [DataSample] by its id
     * Deletes the data sample identified by the provided unique [dataSampleId].
     * @param dataSampleId
     * @return Returns the id of the deleted data sample.
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSample(dataSampleId: kotlin.String): kotlin.String

    /**
     * Delete a batch of [Data Samples]
     * Deletes the batch of data samples identified by the provided [dataSampleIds]. The data samples to delete need to be part of the same batch
     * @param requestBody
     * @return Returns the ids of deleted objects
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException if you tried to delete data samples from different batches
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun deleteDataSamples(requestBody: kotlin.collections.List<kotlin.String>): kotlin.collections.List<kotlin.String>

    /**
     * Find data samples using the provided [filter].
     * Filters are complex selectors that are built by combining basic building blocks. Examples of filters available for [DataSample] are AllDataSamplesFilter and DataSamplesByIdsFilter. This method returns a paginated list of data samples (with a cursor that lets you query the following items).
     * @param filter The Filter object that describes which condition(s) the elements whose the ids should be returned must fulfill
     * @return Returns a PaginatedList of [DataSample].
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun filterDataSample(filter: Filter<DataSample>): PaginatedListDataSample

    /**
     * Get a [DataSample] by its id
     * Each data sample is uniquely identified by a data sample id which is a UUID. This [dataSampleId] is the preferred method to retrieve one specific data sample.
     * @param dataSampleId
     * @return Returns the fetched data sample as a [DataSample] object
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException if there is no data sample corresponding to the provided [dataSampleId].
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSample(dataSampleId: kotlin.String): DataSample

    /**
     * Get attachment content of a DataSample
     * Data Samples may contain attachments such as prescriptions, reports, ... Use this method to get the content of an attachment
     * @param dataSampleId
     * @param documentId
     * @param attachmentId
     * @return Returns the fetched metadata as a flow of [DataBuffer]
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException if there is no data sample or no attachment corresponding to the provided [dataSampleId], [documentId] and [attachmentId].
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachmentContent(
        dataSampleId: kotlin.String,
        documentId: kotlin.String,
        attachmentId: kotlin.String
    ): kotlinx.coroutines.flow.Flow<java.nio.ByteBuffer>

    /**
     * Get document metadata of a DataSample attachment
     * Data Samples may contain attachments such as prescriptions, reports, ... Use this method to get the document metadata information of an attachment
     * @param dataSampleId
     * @param documentId
     * @return Returns the fetched metadata as a [Document] object
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException if there is no data sample or no attachment corresponding to the provided [dataSampleId] and [attachmentId].
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun getDataSampleAttachmentDocument(dataSampleId: kotlin.String, documentId: kotlin.String): Document

    /**
     * Find data samples ids using the provided Filter.
     * Filters are complex selectors that are built by combining basic building blocks. Examples of filters available for [DataSample] are AllDataSamplesFilter and DataSamplesByIdsFilter. This method returns a paginated list of data samples (with a cursor that lets you query the following items).
     * @param filter The Filter object that describes which condition(s) the elements whose the ids should be returned must fulfill
     * @return Returns a list of all data sample ids matching the filter.
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun matchDataSample(filter: Filter<DataSample>): kotlin.collections.List<kotlin.String>

    /**
     * Add or update the attachment of a DataSample
     * Link an attachment or update the attachment of a data sample
     * @param dataSampleId
     * @param body
     * @param documentName  (optional)
     * @param documentVersion  (optional)
     * @param documentExternalUuid  (optional)
     * @param documentLanguage  (optional)
     * @return Returns the created or modified attachment as a [Document] object, with updated information
     * @throws ClientException if you make this call without providing or (by providing an invalid) authentication token (BASIC, SesssionId).
     * @throws ClientException if there is no data sample corresponding to the provided [dataSampleId].
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    suspend fun setDataSampleAttachment(
        dataSampleId: kotlin.String,
        body: kotlinx.coroutines.flow.Flow<java.nio.ByteBuffer>,
        documentName: kotlin.String?,
        documentVersion: kotlin.String?,
        documentExternalUuid: kotlin.String?,
        documentLanguage: kotlin.String?
    ): Document

}
