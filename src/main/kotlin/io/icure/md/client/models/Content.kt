/**
 * ICure Medical Device Micro Service
 *
 * ICure Medical Device Micro Service
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.md.client.models

import io.icure.md.client.models.DataSample
import io.icure.md.client.models.Measure
import io.icure.md.client.models.TimeSeries

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * Information contained in the data sample. Content is localized, using ISO language code as key
 *
 * @param stringValue 
 * @param numberValue 
 * @param booleanValue 
 * @param instantValue 
 * @param fuzzyDateValue Value as date. The format could have a all three (day, month and year) or values on any of these three, whatever is known.
 * @param binaryValue 
 * @param documentId Linked document.
 * @param measureValue 
 * @param timeSeries 
 * @param compoundValue 
 * @param ratio 
 * @param range 
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class Content (

    @field:JsonProperty("stringValue")
    val stringValue: kotlin.String? = null,

    @field:JsonProperty("numberValue")
    val numberValue: kotlin.Double? = null,

    @field:JsonProperty("booleanValue")
    val booleanValue: kotlin.Boolean? = null,

    @field:JsonProperty("instantValue")
    val instantValue: java.time.OffsetDateTime? = null,

    /* Value as date. The format could have a all three (day, month and year) or values on any of these three, whatever is known. */
    @field:JsonProperty("fuzzyDateValue")
    val fuzzyDateValue: kotlin.Long? = null,

    @field:JsonProperty("binaryValue")
    val binaryValue: io.icure.md.client.infrastructure.ByteArrayWrapper? = null,

    /* Linked document. */
    @field:JsonProperty("documentId")
    val documentId: kotlin.String? = null,

    @field:JsonProperty("measureValue")
    val measureValue: Measure? = null,

    @field:JsonProperty("timeSeries")
    val timeSeries: TimeSeries? = null,

    @field:JsonProperty("compoundValue")
    val compoundValue: kotlin.collections.List<DataSample>? = null,

    @field:JsonProperty("ratio")
    val ratio: kotlin.collections.List<Measure>? = null,

    @field:JsonProperty("range")
    val range: kotlin.collections.List<Measure>? = null

)

