/**
 * ICure Medical Device Micro Service
 *
 * ICure Medical Device Micro Service
 *
 * The version of the OpenAPI document: v2
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
package io.icure.md.client.models


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonInclude
import com.github.pozo.KotlinBuilder


/**
 * the list of all names of the patient, also containing the official full name information. Ordered by preference of use. First element is therefore the official name used for the patient in the application
 *
 * @param firstNames
 * @param prefix
 * @param suffix
 * @param lastName
 * @param start
 * @param end
 * @param text
 * @param use
 */

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@KotlinBuilder
data class PersonName (

    @field:JsonProperty("firstNames")
    val firstNames: kotlin.collections.List<kotlin.String> = emptyList(),

    @field:JsonProperty("prefix")
    val prefix: kotlin.collections.List<kotlin.String> = emptyList(),

    @field:JsonProperty("suffix")
    val suffix: kotlin.collections.List<kotlin.String> = emptyList(),

    @field:JsonProperty("lastName")
    val lastName: kotlin.String? = null,

    @field:JsonProperty("start")
    val start: kotlin.Long? = null,

    @field:JsonProperty("end")
    val end: kotlin.Long? = null,

    @field:JsonProperty("text")
    val text: kotlin.String? = null,

    @field:JsonProperty("use")
    val use: PersonName.Use? = null

) {

    /**
     *
     *
     * Values: usual,official,temp,nickname,anonymous,maiden,old,other
     */
    enum class Use(val value: kotlin.String) {
        @JsonProperty(value = "usual") usual("usual"),
        @JsonProperty(value = "official") official("official"),
        @JsonProperty(value = "temp") temp("temp"),
        @JsonProperty(value = "nickname") nickname("nickname"),
        @JsonProperty(value = "anonymous") anonymous("anonymous"),
        @JsonProperty(value = "maiden") maiden("maiden"),
        @JsonProperty(value = "old") old("old"),
        @JsonProperty(value = "other") other("other");
    }
}

